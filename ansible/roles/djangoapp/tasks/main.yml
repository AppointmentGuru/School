---
# - name: Is this a control machine
#   command: "docker info --format '{%raw%}{{json .Swarm.ControlAvailable}}'{%endraw%}"
#   register: docker_info_is_control
#   become: yes
- name: Ensure location exists
  file:
    path: /composes/
    state: directory
  become: yes
- name: Upload compose file
  template:
    src: "docker-compose.yml"
    dest: "/composes/docker-compose.{{docker_service}}.{{docker_version}}.yml"
  become: yes
- name: login to dockerhub
  docker_login:
    username: "{{docker_registry_username}}"
    password: "{{docker_registry_password}}"
    email: "{{docker_registry_email}}"
    state: present
  when: docker_registry_password is defined
  become: yes
  delegate_to: "{{groups.server_swarm_manager[0]}}"

- name: Pull latest image
  shell: "docker pull {{docker_org}}/{{docker_image}}:{{docker_version}}"
  become: yes

- name: Deploy
  shell: "docker stack deploy -c /composes/docker-compose.{{docker_service}}.{{docker_version}}.yml {{docker_service}} --with-registry-auth"
  become: yes
  when: server_swarm_manager
  delegate_to: "{{groups.server_swarm_manager[0]}}"

- name: Expose ports if need be
  shell: "docker service update --publish-add {{item}} {{docker_service}}_{{docker_service}}"
  with_items: "{{docker_expose_ports}}"
  become: yes
  delegate_to: "{{groups.server_swarm_manager[0]}}"

- name: log out dockerhub
  docker_login:
    username: "{{docker_registry_username}}"
    password: "{{docker_registry_password}}"
    email: "{{docker_registry_email}}"
    state: absent
  when: docker_registry_password is defined
  become: yes
  delegate_to: "{{groups.server_swarm_manager[0]}}"
